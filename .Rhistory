#compare stability time with data range
cor(tick_dataset_results$stability_time, tick_dataset_results$data_range)
#compare stability time with total number of datasets
cor(tick_dataset_results$stability_time, tick_dataset_results$stability_time_culamative)
#x axis overall study length and y axis 'years to stability' and
#use the colors/symbols to graph EVERY observation
# create lineplot for years to reach stability for each range of years culamative
years_to_reach_stability_length <- ggplot(tick_dataset_results, aes(x = data_range, y = stability_time, size=stability_time_proportion)) +
geom_point()+
scale_y_continuous(name = "Years to reach stability", expand = c(0,0), limits = c(0,25)) +
xlab("Study length") +
labs(size="Number of datasets") +
scale_size_continuous(limits = c(1,300), breaks=seq(50,300,by=50)) +
xlim(0,25) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
legend.text = element_text(size = 15),
legend.title = element_text(size = 17),
legend.position = c(0.2, 0.8),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)),
plot.margin = margin(10, 20, 0, 0))
years_to_reach_stability_length
# read in tick dataset results from 3/25/2020
tick_dataset_results <- readxl::read_xlsx("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/data/tick dataset results_3_14_2020.xlsx", sheet = 1)
dragging <- subset(tick_dataset_results, sampling_technique == "dragging")
found <- subset(tick_dataset_results, sampling_technique == "found on a person")
t.test(dragging$proportion_wrong, found$proportion_wrong)
t.test(dragging$proportion_wrong_before_stability, found$proportion_wrong_before_stability)
# create boxplot for proportion significantly wrong between different sampling methods
tick_dataset_results_drag_found <- subset(tick_dataset_results, sampling_technique == "dragging" | sampling_technique == "found on a person")
proportion_wrong_by_samp_tech <- ggplot(tick_dataset_results_drag_found, aes(x = sampling_technique, y = proportion_wrong)) +
geom_boxplot() +
scale_x_discrete(name = "Sampling technique") +
scale_y_continuous(name = "Proportion significantly wrong", limits = c(0,1)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_wrong_by_samp_tech
# create boxplot for proportion significantly wrong between different sampling methods
tick_dataset_results_drag_found <- subset(tick_dataset_results, sampling_technique == "dragging" | sampling_technique == "found on a person")
proportion_wrong_before_stab_by_samp_tech <- ggplot(tick_dataset_results_drag_found, aes(x = sampling_technique, y = proportion_wrong_before_stability)) +
geom_boxplot() +
scale_x_discrete(name = "Sampling technique") +
scale_y_continuous(name = "Proportion significantly wrong \nbefore stability", limits = c(0,1)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_wrong_before_stab_by_samp_tech
por_wrong_by_data_length <- ggplot(tick_dataset_results, aes(as.numeric(data_range), as.numeric(proportion_wrong))) +
geom_point() +
geom_smooth(method = 'lm', size=2, formula = y~x) +
scale_x_continuous(name = "Study length", expand = c(0,0)) +
scale_y_continuous(name = "Proportion significantly wrong", expand = c(0,0), limits = c(0,1)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 1, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
por_wrong_by_data_length
# read in tick dataset results from 3/25/2020
tick_dataset_results <- readxl::read_xlsx("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/data/tick dataset results_3_14_2020.xlsx", sheet = 1)
dragging <- subset(tick_dataset_results, sampling_technique == "dragging")
found <- subset(tick_dataset_results, sampling_technique == "found on a person")
length(dragging$stability_time)
#90 datasets
length(found$stability_time)
median(dragging$stability_time)
#7
median(found$stability_time)
t.test(dragging$stability_time, found$stability_time)
t.test(dragging$proportion_wrong_before_stability, found$proportion_wrong_before_stability)
adults <- subset(tick_dataset_results, life_stage == "adult")
nymphs <- subset(tick_dataset_results, life_stage == "nymph")
larvae <- subset(tick_dataset_results, life_stage == "larvae")
t.test(adults$stability_time, nymphs$stability_time)
#t = -0.63883, df = 126.84, p-value = 0.5241
#insignificant
t.test(adults$stability_time, larvae$stability_time)
#t = -5.9627, df = 10.111, p-value = 0.0001328
#significant
t.test(nymphs$stability_time, larvae$stability_time)
t.test(adults$proportion_wrong_before_stability, nymphs$proportion_wrong_before_stability)
#t = 2.8993, df = 113.64, p-value = 0.00449
#significant
t.test(adults$proportion_wrong_before_stability, larvae$proportion_wrong_before_stability)
#t = 0.43788, df = 8.7735, p-value = 0.6721
#insignificant
t.test(nymphs$proportion_wrong_before_stability, larvae$proportion_wrong_before_stability)
length(adults$stability_time)
#63 datasets
length(nymphs$stability_time)
#66 datasets
length(larvae$stability_time)
median(adults$stability_time)
#7
median(nymphs$stability_time)
#7
median(larvae$stability_time)
median(adults$proportion_wrong_before_stability)
#0.1
median(nymphs$proportion_wrong_before_stability)
#0.04166667
median(larvae$proportion_wrong_before_stability)
county <- subset(tick_dataset_results, geographic_scope == "County")
town <- subset(tick_dataset_results, geographic_scope == "Town")
state_forest <- subset(tick_dataset_results, geographic_scope == "State forest")
grid <- subset(tick_dataset_results, geographic_scope == "Grid")
length(county$stability_time)
#73 datasets
length(town$stability_time)
#186 datasets
length(state_forest$stability_time)
#6 datasets
length(grid$stability_time)
median(county$stability_time)
#73
median(town$stability_time)
#186
median(state_forest$stability_time)
#6
median(grid$stability_time)
t.test(county$stability_time, town$stability_time)
t.test(county$stability_time, state_forest$stability_time)
t.test(county$stability_time, grid$stability_time)
t.test(town$stability_time, state_forest$stability_time)
t.test(town$stability_time, grid$stability_time)
t.test(state_forest$stability_time, grid$stability_time)
t.test(county$proportion_wrong_before_stability, town$proportion_wrong_before_stability)
t.test(county$proportion_wrong_before_stability, state_forest$proportion_wrong_before_stability)
t.test(county$proportion_wrong_before_stability, grid$proportion_wrong_before_stability)
t.test(town$proportion_wrong_before_stability, state_forest$proportion_wrong_before_stability)
t.test(town$proportion_wrong_before_stability, grid$proportion_wrong_before_stability)
t.test(state_forest$proportion_wrong_before_stability, grid$proportion_wrong_before_stability)
pathogen <- subset(tick_dataset_results, tested_for_b_burgdoferi == "Y")
abundance <- subset(tick_dataset_results, tested_for_b_burgdoferi == "N")
length(pathogen$stability_time)
#114 datasets
length(abundance$stability_time)
t.test(pathogen$stability_time, abundance$stability_time)
t.test(pathogen$proportion_wrong_before_stability, abundance$proportion_wrong_before_stability)
cor(tick_dataset_results$stability_time, tick_dataset_results$data_range, use = "complete.obs")
t.test(tick_dataset_results$stability_time, tick_dataset_results$data_range)
# create boxplot for proportion significantly wrong between different sampling methods
tick_dataset_results_drag_found <- subset(tick_dataset_results, sampling_technique == "dragging" | sampling_technique == "found on a person")
#set up compact letter display
box.rslt <- with(tick_dataset_results_drag_found, graphics::boxplot(proportion_wrong_before_stability ~ sampling_technique, plot = FALSE))
ttest.rslt <- with(tick_dataset_results_drag_found, pairwise.t.test(proportion_wrong_before_stability, sampling_technique, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
proportion_wrong_before_stab_by_samp_tech <- ggplot(tick_dataset_results_drag_found, aes(x = sampling_technique, y = proportion_wrong_before_stability)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 0.05, color="red", size=6) +
#  geom_signif(comparisons = list(c("dragging", "found on a person")), map_signif_level=TRUE, y_position = 1.05, test = "t.test") +
scale_x_discrete(name = "Sampling technique") +
scale_y_continuous(name = "Proportion significantly wrong \nbefore stability", limits = c(0,1.05)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_wrong_before_stab_by_samp_tech
# create boxplot for proportion significantly wrong between different life stages
tick_dataset_results_ls <- subset(tick_dataset_results, life_stage == "adult" | life_stage == "nymph" | life_stage == "larvae")
tick_dataset_results_ls$life_stage <- factor(tick_dataset_results_ls$life_stage, c("adult", "nymph", "larvae"))
#set up compact letter display
box.rslt <- with(tick_dataset_results_ls, graphics::boxplot(proportion_wrong_before_stability ~ life_stage, plot = FALSE))
ttest.rslt <- with(tick_dataset_results_ls, pairwise.t.test(proportion_wrong_before_stability, life_stage, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
proportion_wrong_before_stab_by_life_stage <- ggplot(tick_dataset_results_ls, aes(x = life_stage, y = proportion_wrong_before_stability)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 0.05,color="red", size=6) +
#  geom_signif(comparisons = list(c("adult", "nymph")), map_signif_level=TRUE, y_position = 1.05, test = "t.test") +
scale_x_discrete(name = "Life stage") +
scale_y_continuous(name = "Proportion significantly wrong \nbefore stability", limits = c(0,1.05)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_wrong_before_stab_by_life_stage
# create boxplot for proportion significantly wrong between different geographic scopes
tick_dataset_results$geographic_scope <- factor(tick_dataset_results$geographic_scope, c("Grid", "State forest", "Town", "County"))
#set up compact letter display
box.rslt <- with(tick_dataset_results, graphics::boxplot(proportion_wrong_before_stability ~ geographic_scope, plot = FALSE))
ttest.rslt <- with(tick_dataset_results, pairwise.t.test(proportion_wrong_before_stability, geographic_scope, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
proportion_wrong_before_stab_by_geographic_scope <- ggplot(tick_dataset_results, aes(x = geographic_scope, y = proportion_wrong_before_stability)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 0.05,color="red", size=6) +
#geom_signif(comparisons = list(c("County", "State forest")), map_signif_level=TRUE, y_position = 1.06, test = "t.test") +
#geom_signif(comparisons = list(c("State forest", "Town")), map_signif_level=TRUE, y_position = 1.01, test = "t.test") +
scale_x_discrete(name = "Geographic scope") +
scale_y_continuous(name = "Proportion significantly wrong \nbefore stability", limits = c(0,1.06)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_wrong_before_stab_by_geographic_scope
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nof B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for \nAbundance"
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
proportion_wrong_before_stab_for_abudance_vs_infected_ticks <- c(tested_for_path$proportion_wrong_before_stability, test_abuance$proportion_wrong_before_stability)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, proportion_wrong_before_stab_for_abudance_vs_infected_ticks)
t.test(tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Tested for infection \nof B. burgdorferi",]$proportion_wrong_before_stab_for_abudance_vs_infected_ticks, tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Sampled for \nAbundance",]$proportion_wrong_before_stab_for_abudance_vs_infected_ticks)
#set up compact letter display
box.rslt <- with(tick_infection_data, graphics::boxplot(proportion_wrong_before_stab_for_abudance_vs_infected_ticks ~ abundance_vs_infected_ticks, plot = FALSE))
ttest.rslt <- with(tick_infection_data, pairwise.t.test(proportion_wrong_before_stab_for_abudance_vs_infected_ticks, abundance_vs_infected_ticks, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
#proportion significant by ticks infected and total ticks
proportion_wrong_before_stab_by_metric <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = proportion_wrong_before_stab_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 0.05,color="red", size=6) +
#geom_signif(comparisons = list(c("Sampled for \nAbundance", "Tested for infection \nof B. burgdorferi")), map_signif_level=TRUE, y_position = 1.05, test = "t.test") +
scale_x_discrete(name = "Sampling metric") +
scale_y_continuous(name = "Proportion significantly wrong \nbefore stability", limits = c(0, 1.05)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
proportion_wrong_before_stab_by_metric
# create boxplot for proportion significantly wrong between different sampling methods
tick_dataset_results_drag_found <- subset(tick_dataset_results, sampling_technique == "dragging" | sampling_technique == "found on a person")
#set up compact letter display
box.rslt <- with(tick_dataset_results_drag_found, graphics::boxplot(stability_time ~ sampling_technique, plot = FALSE))
ttest.rslt <- with(tick_dataset_results_drag_found, pairwise.t.test(stability_time, sampling_technique, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
stability_time_by_samp_tech <- ggplot(tick_dataset_results_drag_found, aes(x = sampling_technique, y = stability_time)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 1.25,color="red",size=6) +
#geom_signif(comparisons = list(c("dragging", "found on a person")), map_signif_level=TRUE) +
scale_x_discrete(name = "Sampling technique") +
scale_y_continuous(name = "Stability time", limits = c(0,25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_samp_tech
# create boxplot for stability time between different sampling methods
tick_dataset_results_ls <- subset(tick_dataset_results, life_stage == "adult" | life_stage == "nymph" | life_stage == "larvae")
tick_dataset_results_ls$life_stage <- factor(tick_dataset_results_ls$life_stage, c("adult", "nymph", "larvae"))
#set up compact letter display
box.rslt <- with(tick_dataset_results_ls, graphics::boxplot(stability_time ~ life_stage, plot = FALSE))
ttest.rslt <- with(tick_dataset_results_ls, pairwise.t.test(stability_time, life_stage, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
stability_time_by_life_stage <- ggplot(tick_dataset_results_ls, aes(x = life_stage, y = stability_time)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 1.25,color="red", size=6) +
#  geom_signif(comparisons = list(c("adult", "larvae")), map_signif_level=TRUE, y_position = 15, test = "t.test") +
#  geom_signif(comparisons = list(c("larvae", "nymph")), map_signif_level=TRUE, y_position = 16.5, test = "t.test") +
scale_x_discrete(name = "Life stage") +
scale_y_continuous(name = "Stability time", limits = c(0,25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_life_stage
#set up compact letter display
box.rslt <- with(tick_dataset_results, graphics::boxplot(stability_time ~ geographic_scope, plot = FALSE))
#order factors
tick_dataset_results$geographic_scope <- factor(tick_dataset_results$geographic_scope, c("Grid", "State forest", "Town", "County"))
#set up compact letter display
box.rslt <- with(tick_dataset_results, graphics::boxplot(stability_time ~ geographic_scope, plot = FALSE))
ttest.rslt <- with(tick_dataset_results, pairwise.t.test(stability_time, geographic_scope, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
# create boxplot for proportion significantly wrong between different geographic scopes
stability_time_by_geographic_scope <- ggplot(tick_dataset_results, aes(x = geographic_scope, y = stability_time)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 1.25,color="red", size=6) +
#geom_signif(comparisons = list(c("County", "Grid")), map_signif_level=TRUE, y_position = 27, test = "t.test") +
#geom_signif(comparisons = list(c("County", "State forest")), map_signif_level=TRUE, y_position = 25.5, test = "t.test") +
#geom_signif(comparisons = list(c("County", "Town")), map_signif_level=TRUE, y_position = 24, test = "t.test") +
scale_x_discrete(name = "Geographic scope") +
scale_y_continuous(name = "Stability time", limits = c(0,27), breaks = c(0,5,10,15,20,25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_geographic_scope
tested_for_path <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "Y",]
tested_for_path$label <- "Tested for infection \nof B. burgdorferi"
test_abuance <- tick_dataset_results[tick_dataset_results$tested_for_b_burgdoferi == "N",]
test_abuance$label <- "Sampled for \nAbundance"
abundance_vs_infected_ticks <- c(tested_for_path$label, test_abuance$label)
stability_time_for_abudance_vs_infected_ticks <- c(tested_for_path$stability_time, test_abuance$stability_time)
tick_infection_data <- data.frame(abundance_vs_infected_ticks, stability_time_for_abudance_vs_infected_ticks)
t.test(tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Tested for infection \nof B. burgdorferi",]$stability_time_for_abudance_vs_infected_ticks, tick_infection_data[tick_infection_data$abundance_vs_infected_ticks == "Sampled for \nAbundance",]$stability_time_for_abudance_vs_infected_ticks)
#set up compact letter display
box.rslt <- with(tick_infection_data, graphics::boxplot(stability_time_for_abudance_vs_infected_ticks ~ abundance_vs_infected_ticks, plot = FALSE))
ttest.rslt <- with(tick_infection_data, pairwise.t.test(stability_time_for_abudance_vs_infected_ticks, abundance_vs_infected_ticks, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
#proportion significant by ticks infected and total ticks
stability_time_by_metric <- ggplot(tick_infection_data, aes(x = abundance_vs_infected_ticks, y = stability_time_for_abudance_vs_infected_ticks)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 1.25,color="red", size=6) +
#geom_signif(comparisons = list(c("Sampled for \nAbundance", "Tested for infection \nof B. burgdorferi")), map_signif_level=TRUE, test = "t.test") +
scale_x_discrete(name = "Sampling metric") +
scale_y_continuous(name = "Stability time", limits = c(0, 25)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
stability_time_by_metric
#testing correlation of numerical variables
#start year vs end year
cor(tick_dataset_results$start_year, tick_dataset_results$end_year)
#start year vs data range
cor(tick_dataset_results$start_year, tick_dataset_results$data_range)
#end year vs data range
cor(tick_dataset_results$end_year, tick_dataset_results$data_range)
cor(tick_dataset_results$life_stage, tick_dataset_results$stability_time)
fit1=lmer(stability_time ~ data_range + life_stage + sampling_technique + geographic_scope + response_units + (1|state), data = tick_dataset_results, REML=FALSE)
anova(fit1)
summary(fit1)
cor(tick_dataset_results$stability_time, tick_dataset_results$proportion_wrong)
# read in tick dataset results from 3/25/2020
tick_dataset_results <- readxl::read_xlsx("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/data/tick dataset results_3_14_2020.xlsx", sheet = 1)
por_wrong_by_stab_time <- ggplot(tick_dataset_results, aes(stability_time, proportion_wrong)) +
geom_point() +
geom_smooth(method = 'lm', size=2, formula = y~x) +
scale_x_continuous(name = "Years to stability", expand = c(0,0)) +
scale_y_continuous(name = "Proportion significantly wrong", expand = c(0,0)) +
ggtitle("Proportion significantly wrong by years to \nstability") +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 1, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 18),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
por_wrong_by_stab_time
# read in tick dataset results from 3/25/2020
tick_dataset_results <- readxl::read_xlsx("D:/Ixodes_scapularis_research_2019/tick_dataset_results_analysis/data/tick dataset results_3_14_2020.xlsx", sheet = 1)
#comparing overall proportion wrong with proportion wrong before stability
plot(tick_dataset_results$`proportion wrong`)
plot(tick_dataset_results$`proportion wrong before stability`)
t.test(tick_dataset_results$proportion_wrong, tick_dataset_results$proportion_wrong_before_stability)
tick_dataset_results$pw_label <- "Overall proportion wrong"
tick_dataset_results$pwbs <- "Proportion wrong before \nstability time"
overall_pw_vs_pwbs_lab <- c(tick_dataset_results$pw_label, tick_dataset_results$pwbs)
overall_pw_vs_pwbs_value <- c(tick_dataset_results$proportion_wrong, tick_dataset_results$proportion_wrong_before_stability)
overall_pw_vs_pwbs_df <- data.frame(overall_pw_vs_pwbs_lab, overall_pw_vs_pwbs_value)
#set up compact letter display
box.rslt <- with(overall_pw_vs_pwbs_df, graphics::boxplot(overall_pw_vs_pwbs_value ~ overall_pw_vs_pwbs_lab, plot = FALSE))
ttest.rslt <- with(overall_pw_vs_pwbs_df, pairwise.t.test(overall_pw_vs_pwbs_value, overall_pw_vs_pwbs_lab, pool.sd = FALSE))
ltrs <- make_letter_assignments(ttest.rslt)
x <- c(1:length(ltrs$Letters))
y <- box.rslt$stats[5, ]
cbd <- ltrs$Letters
ltr_df <- data.frame(x, y, cbd)
#overall proportion significantly wrong by proportion wrong before stability
overall_pw_vs_pwbs <- ggplot(overall_pw_vs_pwbs_df, aes(x = overall_pw_vs_pwbs_lab, y = overall_pw_vs_pwbs_value)) +
geom_boxplot() +
geom_jitter() +
geom_text(data = ltr_df, aes(x=x, y=y, label=cbd), nudge_y = 0.05,color="red", size=6) +
#geom_signif(comparisons = list(c("Overall proportion wrong", "Proportion wrong before \nstability time")), map_signif_level=TRUE, y_position = 1.05, test = "t.test") +
scale_x_discrete(name = "Statistic") +
scale_y_continuous(name = "Proportion", limits = c(0,1.05)) +
theme(axis.line.x = element_line(size = 0.5, colour = "black"),
axis.line.y = element_line(size = 0.5, colour = "black"),
axis.line = element_line(size=1, colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title=element_text(size = 27, margin=margin(0,0,15,0)),
axis.text.x=element_text(colour="black", size = 16),
axis.text.y=element_text(colour="black", size = 18),
axis.title.x = element_text(size = 23, margin=margin(15,0,0,0)),
axis.title.y = element_text(size = 23, margin=margin(0,15,0,0)))
overall_pw_vs_pwbs
